// generated from rosidl_adapter/resource/msg.idl.em
// with input from obstacle_detector/msg/CircleObstacle.msg
// generated code does not contain a copyright notice

#include "geometry_msgs/msg/Point.idl"
#include "geometry_msgs/msg/Vector3.idl"

module obstacle_detector {
  module msg {
    struct CircleObstacle {
      @verbatim (language="comment", text=
        "Unique identifier")
      uint64 uid;

      @verbatim (language="comment", text=
        "Central point")
      @unit (value="m")
      geometry_msgs::msg::Point center;

      @verbatim (language="comment", text=
        "Linear velocity")
      @unit (value="m/s")
      geometry_msgs::msg::Vector3 velocity;

      @verbatim (language="comment", text=
        "Radius with added margin")
      @unit (value="m")
      double radius;

      @verbatim (language="comment", text=
        "True measured radius")
      @unit (value="m")
      double true_radius;

      @verbatim (language="comment", text=
        "Semantic class")
      string semclass;

      @verbatim (language="comment", text=
        "Confidence in semantic class")
      double confidence;
    };
  };
};
